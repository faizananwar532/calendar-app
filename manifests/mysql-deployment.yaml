---
# ConfigMap for initialization scripts
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-mysql-init-scripts
data:
  create_table.sql: |
    USE calenderDb;
    CREATE TABLE IF NOT EXISTS events (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(255) NOT NULL,
      description TEXT,
      date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
---
# Secret for MySQL credentials
apiVersion: v1
kind: Secret
metadata:
  name: my-mysql-credentials
type: Opaque
stringData:
  mysql-root-password: "ASDqwe123!@#"
  mysql-password: ""
  mysql-replication-password: ""
---
# Service for MySQL
apiVersion: v1
kind: Service
metadata:
  name: my-mysql
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-mysql
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
      protocol: TCP
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-mysql
---
# Deployment for MySQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mysql
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: my-mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: my-mysql
    spec:
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.32-debian-11-r0
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-mysql-credentials
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: "calenderDb"
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  mysqladmin status -uroot -p"${password_aux}"
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  mysqladmin status -uroot -p"${password_aux}"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: data
          emptyDir: {}
        - name: init-scripts
          configMap:
            name: my-mysql-init-scripts