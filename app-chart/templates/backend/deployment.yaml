apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-app.backend.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount | default .Values.global.replicaCount }}
  selector:
    matchLabels:
      {{- include "my-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "my-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    #   serviceAccountName: {{ include "my-app.serviceAccountName" . }}
      initContainers:
        - name: wait-for-mysql
          image: {{ .Values.backend.initContainers.waitForMySQL.image | default "busybox:1.35.0-uclibc" }}
          command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-mysql.{{ .Values.namespace }}.svc.cluster.local 3306; do echo "Waiting for MySQL..."; sleep 5; done;']
      containers:
      - name: {{ include "my-app.backend.name" . }}
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.backend.service.port }}
          name: http
        env:
        - name: MYSQL_HOST
          value: {{ .Release.Name }}-mysql.{{ .Values.namespace }}.svc.cluster.local
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "my-app.fullname" . }}-db-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "my-app.fullname" . }}-db-credentials
              key: password
        - name: MYSQL_DATABASE
          value: {{ .Values.backend.env.MYSQL_DATABASE }}
        {{- if .Values.backend.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
        {{- end }}
        {{- if .Values.backend.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}